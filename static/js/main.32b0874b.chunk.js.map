{"version":3,"sources":["route/home/Home.js","route/signup/SignUp.js","route/main/qna/QNA.js","route/main/Context.js","route/main/SideMenu.js","route/main/qna/add/QnaAdd.js","route/main/qna/view/QnaView.js","route/main/qna/edit/QnaEdit.js","route/main/qna/del/QnaDelete.js","route/main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Home","_useState","useState","_useState2","Object","slicedToArray","id","setId","_useState3","_useState4","pw","setPw","_useState5","_useState6","user","setUser","sessionStorage","window","useEffect","setItem","navigate","state","name","useNavigate","submitHandler","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","body","wrap","_context","prev","next","console","log","alert","abrupt","stop","_x","apply","this","arguments","react_default","a","createElement","className","es_image","preview","src","es_form","Item","label","wrapperCol","span","labelCol","rules","required","message","input","type","placeholder","prefix","UserOutlined","onChange","preventDefault","target","value","LockOutlined","Button","onClick","event","react_router_dom","to","SignUp","length","email","number","nickname","gender","setSign","pwCheck","nickCheck","agreement","setPwCheck","_useState7","_useState8","setEmail","_useState9","_useState10","setNumber","_useState11","_useState12","setNickname","_useState13","_useState14","setNickCheck","_useState15","_useState16","setGender","_useState17","_useState18","setAgreement","_useState19","_useState20","sign","_useState21","_useState22","validate","setValidate","signUp","dependencies","hasFeedback","getFieldValue","validator","_","Promise","reject","Error","resolve","validateStatus","row","style","flexWrap","col","noStyle","es_button","CheckOutlined","es_select","Option","valuePropName","es_checkbox","color","disabled","htmlType","Context","Card","width","Body","Title","Subtitle","Text","Link","href","columns","title","dataIndex","data","i","push","key","concat","paragraph","date","helped","QNA","props","selectedRowKeys","minWidth","table","dataSource","pagination","filters","sorter","extra","onRow","record","rowIndex","loadPage","SideMenu","items","children","menu","LoadPage","session","getItem","clear","position","mode","QnaAdd","today","Date","now","getFullYear","getMonth","getDate","divider","TextArea","defaultValue","QnaView","QnaEdit","QnaDelete","Content","Layout","Header","Footer","Main","Sider","main_Context","page","setPage","layout","height","padding","main_SideMenu","pageNum","qna_QNA","add_QnaAdd","view_QnaView","edit_QnaEdit","del_QnaDelete","minHeight","marginLeft","display","textAlign","App","basename","react_router","exact","path","element","home_Home","signup_SignUp","main_Main","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.32b0874b.chunk.js","sourcesContent":["import {Button, Nav} from \"react-bootstrap\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport './Home.css'\r\nimport axios from \"axios\";\r\nimport {Form, Image, Input} from \"antd\";\r\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\r\n\r\nfunction Home() {\r\n    const [id, setId] = useState(\"\");\r\n    const [pw, setPw] = useState(\"\");\r\n    const [user, setUser] = useState(\"default_userName\");\r\n\r\n    const sessionStorage = window.sessionStorage;\r\n\r\n    useEffect(() => {\r\n\r\n        sessionStorage.setItem(\"name\", id)\r\n        if (user !== 'default_userName') {\r\n\r\n            navigate('/main', {\r\n                state: {\r\n                    name: user\r\n                }\r\n            })\r\n        }\r\n    }, [user])\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const idHandler = (e) => {\r\n        e.preventDefault();\r\n        setId(e.target.value);\r\n    };\r\n\r\n    const pwHandler = (e) => {\r\n        e.preventDefault();\r\n        setPw(e.target.value);\r\n    };\r\n\r\n    const submitHandler = async (e) => {\r\n\r\n        let body = {\r\n            id: id,\r\n            pw: pw\r\n        }\r\n        console.log(body);\r\n        // axios\r\n        //     .post(\"URL\", body)\r\n        //     .then(res => console.log(res))\r\n        //     .then(() => setUser('1'));\r\n\r\n        if (id === '') {\r\n            alert(\"ID를 입력해주세요.\")\r\n            return;\r\n        }\r\n\r\n        if (pw === '') {\r\n            alert(\"PW를 입력해주세요.\");\r\n            return;\r\n        }\r\n\r\n        setUser(\"공주\")\r\n        // return\r\n    };\r\n\r\n    return (\r\n        <div className={'home_container'}>\r\n\r\n            <div className={'home_img'}>\r\n                <Image preview={false} src={'images/title_image.png'}/>\r\n            </div>\r\n            <h1>Company-ON</h1>\r\n\r\n            <div>\r\n                <Form name={\"login\"}>\r\n                    <Form.Item label={\"ID\"} name={\"ID\"} wrapperCol={{span: 4}} labelCol={{span: 10}}\r\n                               rules={[{\r\n                                   required: true,\r\n                                   message: 'ID를 입력해주세요!'\r\n                               }]}>\r\n                        <Input type={'text'} placeholder={'ID'} prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                               onChange={idHandler}/>\r\n                    </Form.Item>\r\n                    <Form.Item label={\"PW\"} name={\"PW\"} wrapperCol={{span: 4}} labelCol={{span: 10}}\r\n                               rules={[{\r\n                                   required: true,\r\n                                   message: '비밀번호를 입력해주세요!'\r\n                               }]}>\r\n                        <Input type={'text'} placeholder={'Password'}\r\n                               prefix={<LockOutlined className=\"site-form-item-icon\"/>} onChange={pwHandler}/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n\r\n            <div className={'home_btn'}>\r\n\r\n                <Button name={'login'} type={'submit'} onClick={event => submitHandler(event)}>\r\n                    로그인\r\n                </Button>\r\n                {/*{user && <Navigate to={{pathname:'/main', state:{id:user}}}/>}*/}\r\n                <Link to={\"./signup\"}>\r\n                    <Button name={'login'} type={'submit'}>\r\n                        회원가입\r\n                    </Button></Link>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Home;","import React, {useEffect, useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {Col, Form, Image, Input, Row, Button, Select, Checkbox} from \"antd\";\r\nimport {CheckOutlined} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction SignUp() {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n\r\n        if (id.length > 0 && pw.length > 0 && email.length > 0\r\n            && number.length > 0 && nickname.length > 0 && gender.length > 0) {\r\n            if (pw === pwCheck && nickCheck && agreement) {\r\n                setSign(true)\r\n            } else {\r\n                setSign(false);\r\n            }\r\n        } else {\r\n            setSign(false)\r\n        }\r\n    })\r\n\r\n    const [id, setId] = useState(\"\");\r\n    const [pw, setPw] = useState(\"\");\r\n    const [pwCheck, setPwCheck] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\")\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [nickCheck, setNickCheck] = useState(false)\r\n    const [gender, setGender] = useState(\"\");\r\n    const [agreement, setAgreement] = useState(false)\r\n    const [sign, setSign] = useState(false)\r\n    const [validate, setValidate] = useState('-');\r\n\r\n    const idHandler = (e) => {\r\n        e.preventDefault();\r\n        setId(e.target.value);\r\n    };\r\n\r\n    const pwHandler = (e) => {\r\n        e.preventDefault();\r\n        setPw(e.target.value);\r\n    };\r\n\r\n    const pwCheckHandler = (e) => {\r\n        e.preventDefault();\r\n        setPwCheck(e.target.value);\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        e.preventDefault();\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const phoneNumberHandler = (e) => {\r\n        e.preventDefault();\r\n        setNumber(e.target.value);\r\n    };\r\n\r\n    const nickNameHandler = (e) => {\r\n        e.preventDefault();\r\n        setNickname(e.target.value);\r\n    };\r\n    const genderHandler = (value) => {\r\n        // e.preventDefault();\r\n        setGender(value);\r\n    };\r\n\r\n\r\n    // 닉네임 체크\r\n    const nickNameCheck = (e) => {\r\n        e.preventDefault();\r\n        setNickCheck(true);\r\n\r\n        switch (\"success\"){\r\n            case \"success\":\r\n                setValidate(\"success\");\r\n                break;\r\n            case \"error\":\r\n                setValidate(\"error\");\r\n        }\r\n        // e.target.parentElement. = 'primary'\r\n        // axios\r\n        //     .post(\"URL\", body)\r\n        //     .then(res => console.log(res))\r\n        //     .then(() => setUser('1'));\r\n    }\r\n\r\n    // 회원가입\r\n    const signUp = (e) => {\r\n        const body = {\r\n            id: id,\r\n            pw: pw,\r\n            phone: number,\r\n            nickname: nickname,\r\n            gender: gender,\r\n            email: email,\r\n        }\r\n\r\n        // axios\r\n        //     .post(\"URL\", body)\r\n        //     .then(res => {\r\n                navigate(\"..\")\r\n        //     })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={'home_img'}>\r\n                <Image preview={false} src={'images/title_image.png'}/>\r\n            </div>\r\n            <h1>Company-ON</h1>\r\n\r\n            <Form name={'signUp'}>\r\n                <Form.Item label={\"ID\"} name={\"ID\"} wrapperCol={{span: 6}} labelCol={{span: 9}}\r\n                           rules={[{\r\n                               required: true,\r\n                               message: 'ID를 입력해주세요!'\r\n                           }]}>\r\n                    <Input type={'text'} placeholder=\"ID\" onChange={idHandler}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item label={\"PW\"} name={\"PW\"} wrapperCol={{span: 6}} labelCol={{span: 9}}\r\n                           rules={[{\r\n                               required: true,\r\n                               message: '비밀번호를 입력해주세요!'\r\n                           }]}>\r\n                    <Input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\" onChange={pwHandler}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item name=\"confirm\"\r\n                           label=\"Confirm PW\"\r\n                           dependencies={['PW']}\r\n                           hasFeedback\r\n                           wrapperCol={{span: 6}} labelCol={{span: 9}}\r\n                           rules={[\r\n                               {\r\n                                   required: true,\r\n                                   message: '비밀번호를 입력해주세요!',\r\n                               },\r\n                               ({getFieldValue}) => ({\r\n                                   validator(_, value) {\r\n                                       if (!value || getFieldValue('PW') === value) {\r\n                                           return Promise.resolve();\r\n                                       }\r\n                                       return Promise.reject(new Error('비밀번호가 일치하지 않습니다!'));\r\n                                   },\r\n                               }),\r\n                           ]}>\r\n                    <Input type=\"password\" onChange={pwCheckHandler}\r\n                           placeholder=\"Password\"/>\r\n                </Form.Item>\r\n\r\n                <Form.Item label={\"E-mail\"} name={\"email\"}\r\n                           wrapperCol={{span: 6}} labelCol={{span: 9}}\r\n                           rules={[{\r\n                               required: true,\r\n                               message: '이메일을 입력해주세요!'\r\n                           }]}>\r\n                    <Input onChange={emailHandler} placeholder={\"E-mail\"} type={\"email\"}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item label={\"Phone Number\"} name={\"phone\"} wrapperCol={{span: 6}} labelCol={{span: 9}}\r\n                           rules={[{\r\n                               required: true,\r\n                               message: '전화번호를 입력해주세요!'\r\n                           }]}>\r\n                    <Input onChange={phoneNumberHandler} placeholder={\"Phone Number\"}\r\n                           type={\"tel\"}/>\r\n                </Form.Item>\r\n\r\n                <div>\r\n                    <Form.Item label={\"Nickname\"}\r\n                               hasFeedback validateStatus={validate}\r\n                               wrapperCol={{span: 6}} labelCol={{span: 9}}>\r\n                        <Row style={{flexWrap: 'nowrap'}}>\r\n                            <Col>\r\n                                <Form.Item  noStyle name={\"nickname\"}>\r\n                                    <Input onChange={nickNameHandler} placeholder={\"Nickname\"}\r\n                                           rules={[{\r\n                                               required: true,\r\n                                               message: '닉네임을 입력해주세요!'\r\n                                           }]}/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button onClick={event => nickNameCheck(event)}><CheckOutlined/></Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{span: 6}} labelCol={{span: 9}}\r\n                               name=\"gender\"\r\n                               label=\"Gender\"\r\n                               rules={[\r\n                                   {\r\n                                       required: true,\r\n                                       message: '성별을 선택해주세요!',\r\n                                   },\r\n                               ]}\r\n                    >\r\n                        <Select placeholder=\"Gender\" onChange={genderHandler}>\r\n                            <Select.Option value=\"male\">남성</Select.Option>\r\n                            <Select.Option value=\"female\">여성</Select.Option>\r\n                            <Select.Option value=\"other\">기타</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"agreement\"\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                            {\r\n                                validator: (_, value) =>\r\n                                    value ? Promise.resolve() : Promise.reject(new Error('정책에 동의하셔야 가입하실 수 있습니다.')),\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Checkbox onChange={event => {\r\n                            setAgreement(!agreement)\r\n                        }}>\r\n                            <a style={{color:'#4594ff'}}>회원 가입 정책</a>에 동의합니다.\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button onClick={signUp}\r\n                            disabled={!sign} type={\"primary\"} htmlType={\"submit\"}>회원가입</Button>\r\n                    </Form.Item>\r\n                </div>\r\n\r\n            </Form>\r\n\r\n            <Link to={\"..\"}>\r\n                <Button type={\"submit\"} onClick={signUp}>가짜회원가입</Button>\r\n            </Link>\r\n        </div>\r\n    )\r\n        ;\r\n}\r\n\r\nexport default SignUp;","import React, {useState} from \"react\";\r\nimport {Table, Button, Modal} from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst columns = [\r\n    {\r\n        title: '제목',\r\n        dataIndex: 'title',\r\n    },\r\n    {\r\n        title: '작성자',\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: '작성일',\r\n        dataIndex: 'date',\r\n    },\r\n    {\r\n        title: '도움지수',\r\n        dataIndex: 'helped',\r\n    },\r\n];\r\nconst data = [];\r\n\r\n\r\nfor (let i = 0; i < 46; i++) {\r\n    data.push({\r\n        key: i,\r\n        title: `title${i}`,\r\n        name: `Edward King ${i}`,\r\n        paragraph:`${i * i}`,\r\n        date: 'yyyy.mm.dd',\r\n        helped: `${i}`,\r\n    });\r\n}\r\n\r\nfunction QNA(props) {\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const loadAllQNA = () => {\r\n        axios.get(\"URL\")\r\n            .then(res => {\r\n                data.push({\r\n                    key:res.id,\r\n                    title:res.title,\r\n                    name:res.name,\r\n                    date:res.date,\r\n                    helped:res.helped\r\n                })\r\n            })\r\n    }\r\n\r\n    const start = () => {\r\n        setLoading(true); // ajax request after empty completing\r\n\r\n        setTimeout(() => {\r\n            setSelectedRowKeys([]);\r\n            loadAllQNA()\r\n            setLoading(false);\r\n        }, 1000);\r\n    };\r\n\r\n    const onChange = (pagination, filters, sorter, extra) => {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n    };\r\n\r\n\r\n    const onSelectChange = (newSelectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        setSelectedRowKeys(newSelectedRowKeys);\r\n    };\r\n\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    return (\r\n        <div style={{minWidth:'400px', width:'800px'}}>\r\n        {/*    <div*/}\r\n        {/*        style={{marginBottom: 16,}}>*/}\r\n        {/*        <Button type=\"primary\" onClick={start} disabled={!hasSelected} loading={loading}>*/}\r\n        {/*            Reload*/}\r\n        {/*        </Button>*/}\r\n        {/*        <span style={{marginLeft: 8,}}>*/}\r\n        {/*  {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}*/}\r\n        {/*</span>*/}\r\n        {/*    </div>*/}\r\n            <Table columns={columns} dataSource={data}\r\n                   onChange={onChange}\r\n                   onRow={(record, rowIndex) => {\r\n                       return {\r\n                           onClick: e => {\r\n                               console.log(record)\r\n\r\n                               props.loadPage(4, record)\r\n                           },\r\n                       }\r\n                   }}/>\r\n            <Button onClick={event => props.loadPage(3, props.data)}>질문 등록하기</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QNA","import React from \"react\";\r\nimport {Card} from \"react-bootstrap\";\r\n\r\nfunction Context(){\r\n    return(\r\n        <div>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Body>\r\n                    <Card.Title>Card Title</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk of\r\n                        the card's content.\r\n                    </Card.Text>\r\n                    <Card.Link href=\"#\">Card Link</Card.Link>\r\n                    <Card.Link href=\"#\">Another Link</Card.Link>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Context","import {Menu} from \"antd\";\r\nimport React from \"react\";\r\nimport Context from \"./Context\";\r\nimport QNA from \"./qna/QNA\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nfunction SideMenu(props) {\r\n    const navigate = useNavigate();\r\n\r\n    const items = [\r\n        {label: `${props.data} 님`, key: 'item-1',},\r\n        {\r\n            label: 'Company-ON', key: 'stub 0',\r\n            children: [\r\n                {label: '홈', key: 'item-1-0'},\r\n                {label: '온보딩 절차 안내', key: 'item-1-1'},\r\n                {label: '입사 서류 제출', key: 'item-1-2'},\r\n                {label: '기업 문화/규정', key: 'item-1-3'},\r\n                {label: '전체 구성원', key: 'item-1-4'},\r\n                {label: '사무실 이용', key: 'item-1-5'},\r\n                {label: 'Q&A', key: 'item-1-6'},\r\n            ]\r\n        },\r\n        {\r\n            label: '사용자', key: 'stub 1',\r\n            children: [\r\n                {label: '개인 정보', key: 'item-2-1'},\r\n                {label: '정보 등록', key: 'item-2-2'},\r\n            ]\r\n        },\r\n        {label: '로그아웃', key: 'item-3'},\r\n\r\n\r\n    ];\r\n\r\n    const onClick = (e) => {\r\n\r\n        switch (e.key){\r\n            case 'item-1-6': // Q&A\r\n                props.LoadPage(2, props.data)\r\n                break;\r\n            case 'item-3': // Logout\r\n                const session = window.sessionStorage;\r\n                navigate('..');\r\n                alert(session.getItem(\"name\")+ \"님! \\n\" +\r\n                    \"정상적으로 로그아웃 되셨습니다!\")\r\n                session.clear();\r\n                break;\r\n            default:\r\n                props.LoadPage(1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Menu onClick={onClick}\r\n              style={{width: 256, position: 'fixed'}}\r\n              mode={\"inline\"}\r\n              items={items}/>\r\n    )\r\n\r\n}\r\n\r\nexport default SideMenu;","import React from \"react\";\r\nimport {Button, Divider, Input} from \"antd\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\n\r\nconst QnaAdd = (props) => {\r\n    let data = props.data;\r\n\r\n    const titleChangeHandler = (event) => {\r\n        data.title = event.target.value;\r\n    }\r\n\r\n    const textChangeHandler = (event) => {\r\n        data.paragraph = event.target.value;\r\n    }\r\n\r\n    const today = new Date();\r\n    const now = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()\r\n\r\n    return (<div>\r\n        <div>\r\n            <div>제목 :\r\n                <Input type={\"text\"} onChange={titleChangeHandler} name={'title'}/>\r\n            </div>\r\n            <div>{data}</div>\r\n            <div>{now}</div>\r\n        </div>\r\n        <Divider/>\r\n        <div>\r\n            <div>\r\n                <TextArea defaultValue={props.paragraph} onChange={textChangeHandler}/>\r\n            </div>\r\n            <Button onClick={event => props.loadPage(2, data)}>취소</Button>\r\n            <Button onClick={event => props.loadPage(2, data)}>등록</Button>\r\n        </div>\r\n        <Divider/>\r\n        <div>\r\n            댓글\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default QnaAdd","import React, {useEffect} from \"react\";\r\nimport {Button, Divider} from \"antd\";\r\n\r\n\r\nconst QnaView = (props) => {\r\n    return (<div>\r\n        <div>\r\n            <div>{props.data.title}</div>\r\n            <div>{props.data.name}</div>\r\n            <div>{props.data.date}</div>\r\n        </div>\r\n        <Divider/>\r\n        <div>\r\n            <div>\r\n                {props.data.paragraph}본문\r\n            </div>\r\n            <Button>이 글이 도움돼요</Button>\r\n            <Button onClick={event => props.loadPage(5, props.data)}>수정</Button>\r\n            <Button onClick={event => props.loadPage(6, props.data)}>삭제</Button>\r\n            <Button onClick={event => props.loadPage(2)}>취소</Button>\r\n        </div>\r\n        <Divider/>\r\n        <div>\r\n            댓글\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default QnaView","import React, {useState} from \"react\";\r\nimport {Button, Divider, Input} from \"antd\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\n\r\nconst QnaEdit = (props) => {\r\n    const [paragraph, setParagraph] = useState(props.paragraph);\r\n    const [title, setTitle] = useState(props.data.title);\r\n\r\n    let data = props.data;\r\n\r\n\r\n    const textChangeHandler = (event) => {\r\n        data.paragraph = event.target.value;\r\n    }\r\n\r\n    const titleChangeHandler = (event) => {\r\n        console.log(event.target.value)\r\n        data.title = event.target.value;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>Q&A 수정</div>\r\n            <Divider/>\r\n            <div>제목 :\r\n                <Input type={\"text\"} defaultValue={props.data.title} onChange={titleChangeHandler} name={'title'}/>\r\n            </div>\r\n            <Divider/>\r\n\r\n            <div><TextArea defaultValue={props.paragraph} onChange={textChangeHandler}/>\r\n                <Button onClick={event => props.loadPage(4, props.data)}>취소</Button>\r\n                <Button onClick={event => {\r\n                    console.log(data)\r\n                    props.loadPage(4, data)\r\n                }}>확인</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QnaEdit","import React from \"react\";\r\nimport {Button, Divider} from \"antd\";\r\n\r\nconst QnaDelete = (props) => {\r\n    return (\r\n        <div>\r\n            <div> Q&A 삭제</div>\r\n            <Divider/>\r\n            <div>\r\n                <div>정말 Q&A를 삭제하시겠습니까?</div>\r\n                <div>\r\n                    <Button onClick={event => props.loadPage(4, props.data)}>취소</Button>\r\n                    <Button onClick={event => props.loadPage(2)}>확인</Button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QnaDelete;","import React, {useState, useEffect} from 'react';\r\nimport {Layout, Menu, Breadcrumb} from 'antd'\r\n\r\n// import {UserOutlined, LaptopOutlined, NotificationOutlined} from '@ant-design/icons';\r\nimport 'antd/dist/antd.css'\r\nimport SideMenu from \"./SideMenu\";\r\nimport Context from \"./Context\";\r\nimport QNA from \"./qna/QNA\";\r\nimport QnaAdd from \"./qna/add/QnaAdd\";\r\nimport QnaView from \"./qna/view/QnaView\";\r\nimport QnaEdit from \"./qna/edit/QnaEdit\";\r\nimport QnaDelete from \"./qna/del/QnaDelete\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\n\r\nconst {Header, Content, Footer, Sider} = Layout;\r\n// const items1 = ['1', '2', '3'].map((key) => ({\r\n//     key,\r\n//     label: `nav ${key}`,\r\n// }));\r\n// const items2 = [UserOutlined, LaptopOutlined, NotificationOutlined].map((icon, index) => {\r\n//     const key = String(index + 1);\r\n//     return {\r\n//         key: `sub${key}`,\r\n//         icon: React.createElement(icon),\r\n//         label: `subnav ${key}`,\r\n//         children: new Array(4).fill(null).map((_, j) => {\r\n//             const subKey = index * 4 + j + 1;\r\n//             return {\r\n//                 key: subKey,\r\n//                 label: `option${subKey}`,\r\n//             };\r\n//         }),\r\n//     };\r\n// });\r\n\r\n\r\nconst Main = () => {\r\n\r\n\r\n    let [page, setPage] = useState(<Context/>);\r\n    const navigate = useNavigate();\r\n\r\n    // const location = useLocation()\r\n    let username;\r\n    let data;\r\n    const sessionStorage = window.sessionStorage;\r\n\r\n    data = sessionStorage.getItem('name');\r\n    // console.log('state', location)\r\n    // console.log(sessionStorage)\r\n    // if(typeof location.state.username !== undefined) {\r\n    //     username = location.state.username\r\n    //     data = {name: username}\r\n    // }\r\n    // useEffect(() => {\r\n        //\r\n        // if(typeof location.state.username !== undefined){\r\n        //     alert(\"잘못된 접근입니다.\")\r\n        //     navigate('..')\r\n        // }\r\n        //\r\n        //     }, [])\r\n\r\n    const LoadPage = (pageNum, key) => {\r\n        switch (pageNum) {\r\n            case 1 :\r\n                setPage(<Context/>)\r\n                break;\r\n            case 2:\r\n                setPage(<QNA loadPage={LoadPage} data={key}/>)\r\n                break;\r\n            case 3:\r\n                setPage(<QnaAdd loadPage={LoadPage} data={key}/>)\r\n                break;\r\n            case 4:\r\n                setPage(<QnaView loadPage={LoadPage} data={key}/>)\r\n                break;\r\n            case 5:\r\n                setPage(<QnaEdit loadPage={LoadPage} data={key}/>)\r\n                break;\r\n            case 6:\r\n                setPage(<QnaDelete loadPage={LoadPage} data={key}/>)\r\n        }\r\n    }\r\n    return (\r\n\r\n\r\n        <Layout>\r\n            {/*<Header className=\"header\">*/}\r\n            {/*    <div className=\"logo\"/>*/}\r\n            {/*    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} items={items1}/>*/}\r\n            {/*</Header>*/}\r\n            <Content\r\n                style={{\r\n                    height: '100vh',\r\n                    width:'100%',\r\n                    padding: '0 50px',\r\n                }}\r\n            >\r\n                <Layout\r\n                    className=\"site-layout-background\"\r\n                    style={{\r\n                        padding: '24px 0',\r\n\r\n                    }}\r\n                >\r\n                    <SideMenu LoadPage={LoadPage} data={data}/>\r\n\r\n                    <Content\r\n                        style={{\r\n                            padding: '0 24px',\r\n                            minHeight: 280,\r\n                        }}\r\n                    >\r\n                        <div style={{marginLeft: '256px', display: \"flex\", flexWrap: 'wrap'}}>\r\n                            {page}\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Content>\r\n            <Footer\r\n                style={{\r\n                    textAlign: 'center',\r\n                }}\r\n            >\r\n                Ant Design ©2018 Created by Ant UED\r\n            </Footer>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\r\n\r\nimport Home from \"./route/home/Home\";\r\nimport SignUp from \"./route/signup/SignUp\";\r\nimport Main from \"./route/main/Main\";\r\nimport QNA from \"./route/main/qna/QNA\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <BrowserRouter basename={\"/CompanyON_page\"}>\r\n                <Routes>\r\n                    <Route exact path={\"/\"} element={<Home/>}/>\r\n                    <Route exact path={\"/signup\"} element={<SignUp/>}/>\r\n                    <Route exact path={\"/main\"} element={<Main/>}/>\r\n                    {/*<Route path={\"/main\"} render={(props => <Main {...props}/>)}/>*/}\r\n                </Routes>\r\n            </BrowserRouter>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}